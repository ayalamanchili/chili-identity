<?xml version="1.0" encoding="UTF-8"?>
<!--

    System Soft Technologies Copyright (C) 2013 ayalamanchili@sstech.mobi

-->
<definitions
    xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
    targetNamespace="http://www.bpmnwithactiviti.org"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:activiti="http://activiti.org/bpmn">
    
    <process id="associate_project_offboarding_process">
        <startEvent id="projectOffboardingTaskStart" />
        
        <sequenceFlow sourceRef="projectOffboardingTaskStart" 
                      targetRef="projectOffboardingContractsAdminTask" />
        
        <!-- Project Offboarding task for Contracts Admin-->
        <userTask id="projectOffboardingContractsAdminTask" 
                  name="Project Offboarding Contracts Admin Task for ${employee.firstName} ${employee.lastName}"
                  activiti:candidateGroups="ROLE_CONTRACTS_ADMIN">
            
            <documentation> 
                Associate Project Offboarding Contracts Admin Task Details:
                This project offboarding has been initiated by ${currentEmployee.firstName} ${currentEmployee.lastName}. 
                Please validate the end date and complete this task.
                Employee                : ${employee.firstName} ${employee.lastName}
                Client Name             : ${entity.client.name}
                Vendor Name             : ${entity.vendor.name}
                End Date                : ${projectOffboardingEntity.endDate}
                Reason                  : ${projectOffboardingEntity.notes}                   
            </documentation>
            
            <extensionElements>
                <activiti:taskListener 
                    event="create" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:taskListener 
                    event="complete" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:formProperty id="endDate" 
                                       name=" End Date"
                                       datePattern="MM/dd/YYYY"
                                       required="true" 
                                       type="date" />
                <activiti:formProperty id="notes" 
                                       name="Notes"
                                       required="true" 
                                       type="string" />
            </extensionElements>         
        </userTask>
        
        <!--Workflow for Subcontractor and 1099 Contractor-->
        <sequenceFlow id="subcontractorFlow" sourceRef="projectOffboardingContractsAdminTask" targetRef="subcontractorFork">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor" }]]>
            </conditionExpression>
        </sequenceFlow>
        
        <!--Workflow for employee and W2 Contractor-->
        <sequenceFlow id="employeeFlow1" sourceRef="projectOffboardingContractsAdminTask" targetRef="employeeFork1">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline!=true && (employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="employeeFlow2" sourceRef="projectOffboardingContractsAdminTask" targetRef="employeeFork2">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline==true && (employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="employeeFlow3" sourceRef="projectOffboardingContractsAdminTask" targetRef="employeeFork3">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline!=true && !(employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="employeeFlow4" sourceRef="projectOffboardingContractsAdminTask" targetRef="employeeFork4">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline==true && !(employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        
        
        <parallelGateway id="subcontractorFork" />
        
        <sequenceFlow sourceRef="subcontractorFork" 
                      targetRef="projectOffboardingBillingAdminTask" />
        <sequenceFlow sourceRef="subcontractorFork" 
                      targetRef="projectOffboardingAccountsPayableTask" />
        <sequenceFlow sourceRef="subcontractorFork" 
                      targetRef="projectOffboardingAccountsReceivableTask" />
        
        <parallelGateway id="employeeFork1" />
        
        <sequenceFlow sourceRef="employeeFork1" 
                      targetRef="projectOffboardingBillingAdminTask" />
        <sequenceFlow sourceRef="employeeFork1" 
                      targetRef="projectOffboardingPayrollDeptTask" />
        <sequenceFlow sourceRef="employeeFork1" 
                      targetRef="projectOffboardingAccountsPayableTask" />
        <sequenceFlow sourceRef="employeeFork1" 
                      targetRef="projectOffboardingAccountsReceivableTask" />
        <sequenceFlow sourceRef="employeeFork1" 
                      targetRef="projectOffboardingImmigrationDeptTask" />
        <sequenceFlow sourceRef="employeeFork1" 
                      targetRef="projectOffboardingRecruitingDeptTask" />
        
        <parallelGateway id="employeeFork2" />
        
        <sequenceFlow sourceRef="employeeFork2" 
                      targetRef="projectOffboardingBillingAdminTask" />
        <sequenceFlow sourceRef="employeeFork2" 
                      targetRef="projectOffboardingPayrollDeptTask" />
        <sequenceFlow sourceRef="employeeFork2" 
                      targetRef="projectOffboardingAccountsPayableTask" />
        <sequenceFlow sourceRef="employeeFork2" 
                      targetRef="projectOffboardingAccountsReceivableTask" />
        <sequenceFlow sourceRef="employeeFork2" 
                      targetRef="projectOffboardingImmigrationDeptTask" />
        
        <parallelGateway id="employeeFork3" />
        
        <sequenceFlow sourceRef="employeeFork3" 
                      targetRef="projectOffboardingBillingAdminTask" />
        <sequenceFlow sourceRef="employeeFork3" 
                      targetRef="projectOffboardingPayrollDeptTask" />
        <sequenceFlow sourceRef="employeeFork3" 
                      targetRef="projectOffboardingAccountsPayableTask" />
        <sequenceFlow sourceRef="employeeFork3" 
                      targetRef="projectOffboardingAccountsReceivableTask" />
        <sequenceFlow sourceRef="employeeFork3" 
                      targetRef="projectOffboardingRecruitingDeptTask" />
        
        <parallelGateway id="employeeFork4" />
        
        <sequenceFlow sourceRef="employeeFork4" 
                      targetRef="projectOffboardingBillingAdminTask" />
        <sequenceFlow sourceRef="employeeFork4" 
                      targetRef="projectOffboardingPayrollDeptTask" />
        <sequenceFlow sourceRef="employeeFork4" 
                      targetRef="projectOffboardingAccountsPayableTask" />
        <sequenceFlow sourceRef="employeeFork4" 
                      targetRef="projectOffboardingAccountsReceivableTask" />
            
        
        <!-- Project Offboarding task for Billing Admin-->
        <userTask id="projectOffboardingBillingAdminTask" 
                  name="Project Offboarding Billing Admin Task for ${employee.firstName} ${employee.lastName}" 
                  activiti:candidateGroups="ROLE_BILLING_ADMIN">
            <documentation> 
                Associate Project Offboarding Billing Admin Task Details:
                This project offboarding has been initiated by ${currentEmployee.firstName} ${currentEmployee.lastName}. 
                Please process any pending invoices, update the billing records for this employee and complete this task:
                Employee                : ${employee.firstName} ${employee.lastName}
                Client Name             : ${entity.client.name}
                Vendor Name             : ${entity.vendor.name}
                End Date                : ${projectOffboardingEntity.endDate}
                Reason                  : ${projectOffboardingEntity.notes}                   
            </documentation>
            
            <extensionElements>
                <activiti:taskListener 
                    event="create" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:taskListener 
                    event="complete" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:formProperty id="notes" 
                                       name="Notes"
                                       required="true" 
                                       type="string" />
            </extensionElements>         
        </userTask>
        
        <sequenceFlow sourceRef="projectOffboardingBillingAdminTask" targetRef="subcontractorJoin">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor" }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingBillingAdminTask" targetRef="employeeJoin1">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline!=true && (employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingBillingAdminTask" targetRef="employeeJoin2">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline==true && (employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingBillingAdminTask" targetRef="employeeJoin3">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline!=true && !(employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingBillingAdminTask" targetRef="employeeJoin4">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline==true && !(employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>

        
        <!-- Project Offboarding task for Payroll Dept-->
        <userTask id="projectOffboardingPayrollDeptTask" 
                  name="Project Offboarding Payroll Task for ${employee.firstName} ${employee.lastName}" 
                  activiti:candidateGroups="ROLE_PAYROLL_AND_BENIFITS">
            <documentation> 
                Associate Project Offboarding Payroll Dept Task Details:
                This project offboarding has been initiated by ${currentEmployee.firstName} ${currentEmployee.lastName}. 
                Please make any necessary payroll systems changes for this employee and complete this task:
                Employee                : ${employee.firstName} ${employee.lastName}
                Client Name             : ${entity.client.name}
                Vendor Name             : ${entity.vendor.name}
                End Date                : ${projectOffboardingEntity.endDate}
                Reason                  : ${projectOffboardingEntity.notes}               
            </documentation>
            <extensionElements>
                <activiti:taskListener 
                    event="create" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:taskListener 
                    event="complete" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:formProperty id="notes" 
                                       name="Notes"
                                       required="true" 
                                       type="string" />
            </extensionElements>         
        </userTask>
        
        <sequenceFlow sourceRef="projectOffboardingPayrollDeptTask" targetRef="employeeJoin1">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline!=true && (employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingPayrollDeptTask" targetRef="employeeJoin2">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline==true && (employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingPayrollDeptTask" targetRef="employeeJoin3">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline!=true && !(employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingPayrollDeptTask" targetRef="employeeJoin4">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline==true && !(employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>

        <!-- Project Offboarding task for Accounts Payable Dept-->
        <userTask id="projectOffboardingAccountsPayableTask" 
                  name="Project Offboarding Accounts Payable Task for ${employee.firstName} ${employee.lastName}" 
                  activiti:candidateGroups="ROLE_ACCOUNTS_PAYABLE">
            <documentation> 
                Associate Project Offboarding Accounts Payable Dept Task Details:
                This project offboarding has been initiated by ${currentEmployee.firstName} ${currentEmployee.lastName}. 
                Please  make sure evrything is taken care of from an accounts payable perspective and complete this task.
                Employee                : ${employee.firstName} ${employee.lastName}
                Client Name             : ${entity.client.name}
                Vendor Name             : ${entity.vendor.name}
                End Date                : ${projectOffboardingEntity.endDate}
                Reason                  : ${projectOffboardingEntity.notes}               
            </documentation>
            <extensionElements>
                <activiti:taskListener 
                    event="create" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:taskListener 
                    event="complete" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:formProperty id="notes" 
                                       name="Notes"
                                       required="true" 
                                       type="string" />
            </extensionElements>         
        </userTask>
        
        <sequenceFlow sourceRef="projectOffboardingAccountsPayableTask" targetRef="subcontractorJoin">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor" }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingAccountsPayableTask" targetRef="employeeJoin1">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline!=true && (employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingAccountsPayableTask" targetRef="employeeJoin2">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline==true && (employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingAccountsPayableTask" targetRef="employeeJoin3">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline!=true && !(employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingAccountsPayableTask" targetRef="employeeJoin4">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline==true && !(employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        
        <!-- Project Offboarding task for Accounts Receivable Dept-->
        <userTask id="projectOffboardingAccountsReceivableTask" 
                  name="Project Offboarding Accounts Receivable Task for ${employee.firstName} ${employee.lastName}" 
                  activiti:candidateGroups="ROLE_ACCOUNTS_RECEIVABLE">
            <documentation> 
                Associate Project Offboarding Accounts Receivable Dept Task Details:
                This project offboarding has been initiated by ${currentEmployee.firstName} ${currentEmployee.lastName}. 
                Please  make sure evrything is taken care of from an accounts receivable perspective and complete this task.
                Employee                : ${employee.firstName} ${employee.lastName}
                Client Name             : ${entity.client.name}
                Vendor Name             : ${entity.vendor.name}
                End Date                : ${projectOffboardingEntity.endDate}
                Reason                  : ${projectOffboardingEntity.notes}               
            </documentation>
            <extensionElements>
                <activiti:taskListener 
                    event="create" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:taskListener 
                    event="complete" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:formProperty id="notes" 
                                       name="Notes"
                                       required="true" 
                                       type="string" />
            </extensionElements>         
        </userTask>
        
        <sequenceFlow sourceRef="projectOffboardingAccountsReceivableTask" targetRef="subcontractorJoin">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor" }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingAccountsReceivableTask" targetRef="employeeJoin1">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline!=true && (employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingAccountsReceivableTask" targetRef="employeeJoin2">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline==true && (employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingAccountsReceivableTask" targetRef="employeeJoin3">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline!=true && !(employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingAccountsReceivableTask" targetRef="employeeJoin4">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline==true && !(employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>

        <!-- Project Offboarding task for Immigration Dept-->
        <userTask id="projectOffboardingImmigrationDeptTask" 
                  name="Project Offboarding Immigration Dept Task for ${employee.firstName} ${employee.lastName}" 
                  activiti:candidateGroups="ROLE_H1B_IMMIGRATION">
            <documentation> 
                Associate Project Offboarding Immigration Dept Task Details:
                This project offboarding has been initiated by ${currentEmployee.firstName} ${currentEmployee.lastName}. 
                Please make any necessary immgiration chnages if required and complete this task.
                Employee                : ${employee.firstName} ${employee.lastName}
                Client Name             : ${entity.client.name}
                Vendor Name             : ${entity.vendor.name}
                WorkStatus              : ${employee.workStatus}
                End Date                : ${projectOffboardingEntity.endDate}
                Reason                  : ${projectOffboardingEntity.notes}                
            </documentation>
            <extensionElements>
                <activiti:taskListener 
                    event="create" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:taskListener 
                    event="complete" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:formProperty id="notes" 
                                       name="Notes"
                                       required="true" 
                                       type="string" />
            </extensionElements>         
        </userTask>
        
        
        <sequenceFlow sourceRef="projectOffboardingImmigrationDeptTask" targetRef="employeeJoin1">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline!=true && (employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingImmigrationDeptTask" targetRef="employeeJoin2">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline==true && (employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>

        
        <!-- Project Offboarding task for Recruiting Dept-->
        <userTask id="projectOffboardingRecruitingDeptTask" 
                  name="Project Offboarding Recruiting Dept Task for ${employee.firstName} ${employee.lastName}" 
                  activiti:candidateGroups="ROLE_RECRUITER">
            <documentation> 
                Associate Project Offboarding Recruiting Dept Task Details:
                This project offboarding has been initiated by ${currentEmployee.firstName} ${currentEmployee.lastName}. 
                This employee's current project is ending soon and he/she will be available for recruitment. 
                Employee                : ${employee.firstName} ${employee.lastName}
                Client Name             : ${entity.client.name}
                Vendor Name             : ${entity.vendor.name}
                End Date                : ${projectOffboardingEntity.endDate}
                Reason                  : ${projectOffboardingEntity.notes}
            </documentation>
            <extensionElements>
                <activiti:taskListener 
                    event="create" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:taskListener 
                    event="complete" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:formProperty id="notes" 
                                       name="Notes"
                                       required="true" 
                                       type="string" />
            </extensionElements>         
        </userTask>
        
        <sequenceFlow sourceRef="projectOffboardingRecruitingDeptTask" targetRef="employeeJoin1">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline!=true && (employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="projectOffboardingRecruitingDeptTask" targetRef="employeeJoin3">
            <conditionExpression xsi:type="tFormalExpression">
                    <![CDATA[${!(employeeType.name=="Subcontractor" || employeeType.name=="1099 Contractor") && projectOffboardingEntity.projectInPipeline!=true && !(employee.workStatus=="H1B" || employee.workStatus=="OPT") }]]>
            </conditionExpression>
        </sequenceFlow>

        <parallelGateway id="subcontractorJoin" />
        <sequenceFlow sourceRef="subcontractorJoin" 
                      targetRef="projectOffboardingValidationTask" />
        <parallelGateway id="employeeJoin1" />
        <sequenceFlow sourceRef="employeeJoin1" 
                      targetRef="projectOffboardingValidationTask" />
        <parallelGateway id="employeeJoin2" />
        <sequenceFlow sourceRef="employeeJoin2" 
                      targetRef="projectOffboardingValidationTask" />
        <parallelGateway id="employeeJoin3" />
        <sequenceFlow sourceRef="employeeJoin3" 
                      targetRef="projectOffboardingValidationTask" />
        <parallelGateway id="employeeJoin4" />
        <sequenceFlow sourceRef="employeeJoin4" 
                      targetRef="projectOffboardingValidationTask" />
        
        <userTask id="projectOffboardingValidationTask"
                  name="Project Offboarding Validation Task for ${employee.firstName} ${employee.lastName}"
                  activiti:candidateGroups="ROLE_CONTRACTS_ADMIN">
            <documentation> 
                Associate Project Offboarding Validation Task Details:
                This project offboarding has been initiated by ${currentEmployee.firstName} ${currentEmployee.lastName}. 
                Please validate the offboarding details for this employee and complete this task:
                Employee                : ${employee.firstName} ${employee.lastName}
                Client Name             : ${entity.client.name}
                Vendor Name             : ${entity.vendor.name}
                End Date                : ${projectOffboardingEntity.endDate}
                Reason                  : ${projectOffboardingEntity.notes}
            </documentation>
            <extensionElements>
                <activiti:taskListener 
                    event="create" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:taskListener 
                    event="complete" 
                    class="info.yalamanchili.office.bpm.offboarding.ProjectOffboardingProcess" />
                <activiti:formProperty id="notes" 
                                       name="Notes"
                                       required="true" 
                                       type="string" />
            </extensionElements>         
        </userTask>
        
        <sequenceFlow sourceRef="projectOffboardingValidationTask" 
                      targetRef="projectOffboardingTaskEnd" />

        <endEvent id="projectOffboardingTaskEnd" />
    </process>
</definitions>
