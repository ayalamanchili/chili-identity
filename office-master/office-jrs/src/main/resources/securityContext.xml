<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:security="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    
    <!-- Security url configuration -->
    <http auto-config="true" create-session="stateless" use-expressions="true">
        <intercept-url pattern="/*/file/*" access="permitAll" />
        <intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
    </http>
     
    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="passwordEncoder" />
            <jdbc-user-service  id="userService" data-source-ref="officeSecurityDataSource"
                                users-by-username-query="select username, passwordHash ,enabled from CUser where username=?"

                                authorities-by-username-query="select user.username, role.rolename from cuser user, crole role, userroles userroles 
		      where user.userId = userroles.userId and userroles.roleId= role.roleId and user.username =?  " />
        </authentication-provider>
    </authentication-manager>
    <beans:bean id ="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" >
        <beans:constructor-arg value="256"/>
    </beans:bean>
</beans:beans>