<!--

    System Soft Technologies Copyright (C) 2013 ayalamanchili@sstech.mobi

-->
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:security="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.1.xsd">

    
    <!-- Security url configuration -->
    <http auto-config="true" create-session="stateless" use-expressions="true">
        <intercept-url pattern="/**/secured/**" access="hasRole('ROLE_USER') and hasIpAddress('127.0.0.1')" />
        <csrf disabled="true"/>
        <!-- http://stackoverflow.com/questions/28647136/how-to-disable-x-frame-options-response-header-in-spring-security-->
        <headers>
            <frame-options policy="SAMEORIGIN"/>
        </headers>
        <!-- This is to handle form login for email tasks -->
        <!--<form-login authentication-success-handler-ref="authenticationSuccessHandler"/>-->
    </http>
     
    <security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>
         
        <!--    <beans:bean id="authenticationSuccessHandler"
                    class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
            fix target default URL
            <beans:property name="defaultTargetUrl" value="/problemSolution/home"/>
        </beans:bean>-->

        <authentication-manager>
            <authentication-provider>
                <password-encoder ref="passwordEncoder" />
                <jdbc-user-service  id="userService" data-source-ref="officeSecurityDataSource"
                                users-by-username-query="select username, passwordHash ,enabled from CUser where username=?"

                                authorities-by-username-query="select user.username, role.rolename from cuser user, crole role, userroles userroles 
		      where user.userId = userroles.userId and userroles.roleId= role.roleId and user.username =?  " />
            </authentication-provider>
        </authentication-manager>
        <beans:bean id ="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" >
            <beans:constructor-arg value="256"/>
        </beans:bean>
        <!-- this is standrad encryptor used for encrypting data.-->
        <beans:bean id="hibernateStringEncryptor" class="org.jasypt.hibernate.encryptor.HibernatePBEStringEncryptor">
            <beans:property name="registeredName" value="hibernateStringEncryptor"/>
            <beans:property name="password" value="${jasypt.password}"/>
        </beans:bean>
        <!-- used for hasing-->
        <beans:bean id="officeStringDigester" class="org.jasypt.digest.PooledStringDigester" >
            <beans:property name="poolSize" value="2" />
            <beans:property name="algorithm" value="SHA-1" />
            <beans:property name="iterations" value="100000" />
            <beans:property name="saltGenerator">
                <beans:bean id="saltGenerator" class="org.jasypt.salt.ZeroSaltGenerator"/>
            </beans:property>
        </beans:bean>
</beans:beans>