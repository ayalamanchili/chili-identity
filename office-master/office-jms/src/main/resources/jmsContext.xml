<!--

    System Soft Technologies Copyright (C) 2013 ayalamanchili@sstech.mobi

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jms="http://www.springframework.org/schema/jms" xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jms 
                           http://www.springframework.org/schema/jms/spring-jms.xsd
                           http://activemq.apache.org/schema/core 
                           http://activemq.apache.org/schema/core/activemq-core.xsd">

    <!-- Embedded ActiveMQ Broker -->
    <amq:broker useJmx="false" start="true" persistent="false">
        <amq:transportConnectors>
            <amq:transportConnector uri="tcp://localhost:0" />
        </amq:transportConnectors>
    </amq:broker>

    <!-- ActiveMQ destinations to use -->
    <amq:queue id="emailQueue" physicalName="info.yalamanchili.office.email.queue" />

    <!-- JMS ConnectionFactory to use -->
    <amq:connectionFactory id="jmsFactory" brokerURL="vm://localhost">
        <amq:redeliveryPolicy>
            <amq:redeliveryPolicy maximumRedeliveries="4" initialRedeliveryDelay="3600000" useExponentialBackOff="true" backOffMultiplier="5" />
        </amq:redeliveryPolicy>
    </amq:connectionFactory>

    <!-- Spring JMS Template -->
    <bean id="offcieJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <qualifier value="producer" />
        <property name="connectionFactory">
            <!-- lets wrap in a pool to avoid creating a connection per send -->
            <bean class="org.springframework.jms.connection.SingleConnectionFactory">
                <property name="targetConnectionFactory">
                    <ref bean="jmsFactory" />
                </property>
            </bean>
        </property>
    </bean>

    <jms:listener-container container-type="default"
                            connection-factory="jmsFactory" acknowledge="transacted">
        <jms:listener destination="info.yalamanchili.office.email.queue"
                      ref="emailQueueMessageListener" />
    </jms:listener-container>
</beans>


