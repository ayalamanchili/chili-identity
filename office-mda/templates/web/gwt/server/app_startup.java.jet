<java:merge/>
<java:format>
<f:bundle basename="templates/resources/messages">
<f:message>copyright</f:message>
package ${$groupID}.server;

import javax.persistence.EntityManager;

import org.jboss.seam.ScopeType;
import org.jboss.seam.annotations.In;
import org.jboss.seam.annotations.Name;
import org.jboss.seam.annotations.Observer;
import org.jboss.seam.annotations.Scope;
import org.jboss.seam.annotations.Startup;
import org.jboss.seam.annotations.Transactional;
import org.jboss.seam.annotations.async.Asynchronous;
<f:message>generated.class.comment</f:message>
@Name("${lower-case($projectName)}Startup")
@Scope(ScopeType.APPLICATION)
//@startup not needed?
//@Startup
public class ${camelCase($projectName)}Startup {
<f:message>generated.comment</f:message>
@In(create = true)
	protected EntityManager em;

<f:message>generated.comment</f:message>
	// TODO fix issue
	/*
	 * http://code.google.com/p/yalamanchili/issues/detail?id=127&q=hibernate%20
	 * search
	 */
	@Observer("org.jboss.seam.postInitialization")
	@Transactional
	public void searchIndexBuilder() {
		/*try {
			SearchUtils.getFullTextSession(em).createIndexer()
					.batchSizeToLoadObjects(25).cacheMode(CacheMode.NORMAL)
					.threadsToLoadObjects(5).threadsForSubsequentFetching(20)
					.startAndWait();
		} catch (InterruptedException e) {
			e.printStackTrace();
		} */

	}
}
</f:bundle>
</java:format>