#import <Foundation/Foundation.h>
<%-- collections and user defined Datatypes --%>
<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Association" var="association">
	<c:iterate select="$association/Association.connection" var="association_connection">
		<c:iterate select="$association_connection/AssociationEnd" var="association_connection_end">
			<c:setVariable select="$association_connection_end/AssociationEnd.participant/Class/@xmi.idref" var="association_connection_end_classID" />
		<%-- check is the association is corresponding to the class  --%>
					<c:if test="$association_connection_end_classID = $classID"> 
  					   	<%-- iterate over the iterations ends  --%>
  					  	 <c:iterate select="$association_connection/AssociationEnd" var="association_connection_end2">
  					  	 <c:setVariable select="$association_connection_end2/AssociationEnd.participant/Class/@xmi.idref" var="association_connection_end_classID2" />
  					  	 	<%-- get the end secondary end with other class  --%>
  					  		 	<c:if test="not($association_connection_end_classID2 = $classID)"> 
  					  		 	<%-- iterate throught all the classes to get the other class on the association--%>
  					  		 		<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Class" var="class2">
  					  		 			<c:if test="$class2/@xmi.id = $association_connection_end_classID2"> 	
  										<%-- check to see the association is navigable in the first case--%>
  										<c:if test="$association_connection_end2/@isNavigable = 'true'">			  		 			
  					  		 			<%-- This processes the JPA realations @OneToMany, @ManyToMany, @OneToOne etc--%>
  					  		 			<%-- check if the multiplicityis one to one--%>
  					  		 			<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@lower = 1">
  					    						<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@upper = 1">
@class <c:replaceStrings replace="." with="_">${$groupID}</c:replaceStrings>_entity_${lower-case($package/@name)}_${$class2/@name};
  					  		 					</c:if>  
  					  		 			</c:if>
  										 <%-- check if the multiplicityis one to many--%>
   					  		 			<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@lower = 0">
  					    						<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@upper = -1">
// TODO many relations  					    						
 //protected 	List<${$class2/@name}>  ${lowercaseFirst($class2/@name)}s;
  					  		 					</c:if>  
  					  		 			</c:if>
  					  		 			</c:if>	
  					  		 			</c:if> 
  					  		 		</c:iterate>
  							  	</c:if> 
  					 	  </c:iterate> 					 	 				 	  
					</c:if> 											
		</c:iterate>
	</c:iterate>
</c:iterate>
<c:if test="not($class/@parent1 = $class/@name)"> #import"<c:replaceStrings replace="." with="_">${$groupID}</c:replaceStrings>_entity_${lower-case($package/@name)}_${$class/@parentClass1Name}.h"; </c:if>
@interface <c:replaceStrings replace="." with="_">${$groupID}</c:replaceStrings>_entity_${lower-case($package/@name)}_${$class/@name} : <c:if test="$class/@parentClass1Name = $class/@name"> NSObject </c:if> <c:if test="not($class/@parentClass1Name = $class/@name)"> <c:replaceStrings replace="." with="_">${$groupID}</c:replaceStrings>_entity_${lower-case($package/@name)}_${$class/@parentClass1Name} </c:if>{
<c:if test="$class/@parentClass1Name = $class/@name">
	NSNumber *entityID; 
</c:if>
	<%-- processes the premitive Datatypes and enums--%>
<c:iterate select="$class/Classifier.feature/Attribute" var="attribute">
	 <c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
	  <c:when test="${'$StringID'}" > 
	  NSString *${$attribute/@name};
	  </c:when> 
	  <c:when test="${'$IntegerID'}" >
	   NSNumber *${$attribute/@name};
	  </c:when>
	  <c:when test="${'$DateID'}" >
	   NSDate *${$attribute/@name};
	  </c:when>
	  <c:when test="${'$BooleanID'}" >
	   Boolean ${$attribute/@name};
	  </c:when>
	  <c:when test="${'$LongID'}" >
	   NSNumber *${$attribute/@name};
	  </c:when>
	  <c:when test="${'$FloatID'}" >
	   NSDouble *${$attribute/@name};
	  </c:when>
	 <c:otherwise> 
	 	<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Enumeration" var="enumeration">
	 			<c:if test="$attribute/StructuralFeature.type/Enumeration/@xmi.idref = $enumeration/@xmi.id">
	 			<%-- add  enums support--%>
	 			</c:if>
	 	</c:iterate>	
	 	  </c:otherwise>
</c:choose> 
</c:iterate>
<%-- collections and user defined Datatypes --%>
<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Association" var="association">
	<c:iterate select="$association/Association.connection" var="association_connection">
		<c:iterate select="$association_connection/AssociationEnd" var="association_connection_end">
			<c:setVariable select="$association_connection_end/AssociationEnd.participant/Class/@xmi.idref" var="association_connection_end_classID" />
		<%-- check is the association is corresponding to the class  --%>
					<c:if test="$association_connection_end_classID = $classID"> 
  					   	<%-- iterate over the iterations ends  --%>
  					  	 <c:iterate select="$association_connection/AssociationEnd" var="association_connection_end2">
  					  	 <c:setVariable select="$association_connection_end2/AssociationEnd.participant/Class/@xmi.idref" var="association_connection_end_classID2" />
  					  	 	<%-- get the end secondary end with other class  --%>
  					  		 	<c:if test="not($association_connection_end_classID2 = $classID)"> 
  					  		 	<%-- iterate throught all the classes to get the other class on the association--%>
  					  		 		<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Class" var="class2">
  					  		 			<c:if test="$class2/@xmi.id = $association_connection_end_classID2"> 		
  										<%-- check to see the association is navigable in the first case--%>
  										<c:if test="$association_connection_end2/@isNavigable = 'true'">			  		 			
  					  		 			<%-- This processes the JPA realations @OneToMany, @ManyToMany, @OneToOne etc--%>
  					  		 			<%-- check if the multiplicityis one to one--%>
  					  		 			<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@lower = 1">
  					    						<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@upper = 1">
		<c:replaceStrings replace="." with="_">${$groupID}</c:replaceStrings>_entity_${lower-case($package/@name)}_${$class2/@name}  *${lowercaseFirst($class2/@name)};
  					  		 					</c:if>  
  					  		 			</c:if>
  										 <%-- check if the multiplicityis one to many--%>
   					  		 			<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@lower = 0">
  					    						<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@upper = -1">
// TODO many relations  					    						
 //protected 	List<${$class2/@name}>  ${lowercaseFirst($class2/@name)}s;
  					  		 					</c:if>  
  					  		 			</c:if>
  					  		 			</c:if>	
  					  		 			</c:if> 
  					  		 		</c:iterate>
  							  	</c:if> 
  					 	  </c:iterate> 					 	 				 	  
					</c:if> 											
		</c:iterate>
	</c:iterate>
</c:iterate>
}
<c:if test="$class/@parentClass1Name = $class/@name">
	@property (nonatomic,retain) NSNumber *entityID; 
</c:if>
	<%-- processes the premitive Datatypes and enums--%>
<c:iterate select="$class/Classifier.feature/Attribute" var="attribute">
	 <c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
	  <c:when test="${'$StringID'}" > 
	  @property (nonatomic,retain) NSString *${$attribute/@name};
	  </c:when> 
	  <c:when test="${'$IntegerID'}" >
	  @property (nonatomic,retain) NSNumber *${$attribute/@name};
	  </c:when>
	  <c:when test="${'$DateID'}" >
	  @property (nonatomic,retain)  NSDate *${$attribute/@name};
	  </c:when>
	  <c:when test="${'$BooleanID'}" >
	  @property Boolean ${$attribute/@name};
	  </c:when>
	  <c:when test="${'$LongID'}" >
	   @property (nonatomic,retain) NSNumber *${$attribute/@name};
	  </c:when>
	  <c:when test="${'$FloatID'}" >
	  @property (nonatomic,retain) NSDouble *${$attribute/@name};
	  </c:when>
	 <c:otherwise> 
	 	<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Enumeration" var="enumeration">
	 			<c:if test="$attribute/StructuralFeature.type/Enumeration/@xmi.idref = $enumeration/@xmi.id">
	 			<%-- add  enums support--%>
	 			</c:if>
	 	</c:iterate>	
	 	  </c:otherwise>
</c:choose> 
</c:iterate>
<%-- collections and user defined Datatypes --%>
<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Association" var="association">
	<c:iterate select="$association/Association.connection" var="association_connection">
		<c:iterate select="$association_connection/AssociationEnd" var="association_connection_end">
			<c:setVariable select="$association_connection_end/AssociationEnd.participant/Class/@xmi.idref" var="association_connection_end_classID" />
		<%-- check is the association is corresponding to the class  --%>
					<c:if test="$association_connection_end_classID = $classID"> 
  					   	<%-- iterate over the iterations ends  --%>
  					  	 <c:iterate select="$association_connection/AssociationEnd" var="association_connection_end2">
  					  	 <c:setVariable select="$association_connection_end2/AssociationEnd.participant/Class/@xmi.idref" var="association_connection_end_classID2" />
  					  	 	<%-- get the end secondary end with other class  --%>
  					  		 	<c:if test="not($association_connection_end_classID2 = $classID)"> 
  					  		 	<%-- iterate throught all the classes to get the other class on the association--%>
  					  		 		<c:iterate select="/XMI/XMI.content/Model/Namespace.ownedElement/Package/Namespace.ownedElement/Class" var="class2">
  					  		 			<c:if test="$class2/@xmi.id = $association_connection_end_classID2"> 
  										<%-- check to see the association is navigable in the first case--%>
  										<c:if test="$association_connection_end2/@isNavigable = 'true'">			  		 			
  					  		 			<%-- This processes the JPA realations @OneToMany, @ManyToMany, @OneToOne etc--%>
  					  		 			<%-- check if the multiplicityis one to one--%>
  					  		 			<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@lower = 1">
  					    						<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@upper = 1">
		@property (nonatomic,retain) <c:replaceStrings replace="." with="_">${$groupID}</c:replaceStrings>_entity_${lower-case($package/@name)}_${$class2/@name}  *${lowercaseFirst($class2/@name)};
  					  		 					</c:if>  
  					  		 			</c:if>
  										 <%-- check if the multiplicityis one to many--%>
   					  		 			<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@lower = 0">
  					    						<c:if test="$association_connection_end2/AssociationEnd.multiplicity/Multiplicity/Multiplicity.range/MultiplicityRange/@upper = -1">
// TODO many relations  					    						
 //protected 	List<${$class2/@name}>  ${lowercaseFirst($class2/@name)}s;
  					  		 					</c:if>  
  					  		 			</c:if>
  					  		 			</c:if>	
  					  		 			</c:if> 
  					  		 		</c:iterate>
  							  	</c:if> 
  					 	  </c:iterate> 					 	 				 	  
					</c:if> 											
		</c:iterate>
	</c:iterate>
</c:iterate>
@end