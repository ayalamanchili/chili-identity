<java:format>
package ${$groupID}.android.${$package/@name}.${lower-case($class/@name)};
import ${$groupID}.android.${camelCase($projectName)}Welcome;
import ${$groupID}.R;
import info.yalamanchili.android.crud.AbstractUpdateActivity;
import info.yalamanchili.android.views.Field;


public class Update${$class/@name} extends AbstractUpdateActivity {
	
	@Override
	protected int contentViewId() {
		return R.layout.${lower-case($class/@name)}_create;
	}

	@Override
	protected int updateButtonId() {
		return R.id.${lower-case($class/@name)}_create;
	}
				
	@Override
	protected void assignFields() {
	<%-- process parent class level 2 attributes--%>
	<c:if test="not($class/@name = $parentClass2/@name)">
				<c:iterate select="$parentClass2/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" > 
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.STRING_FIELD);
				 </c:when>
				 <c:when test="${'$IntegerID'}" > 
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.NUMERIC_FIELD);
				 </c:when>
				 <c:when test="${'$DateID'}" > 
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.DATE_FIELD);
				 </c:when>
				 <c:when test="${'$BooleanID'}" >  
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.BOOLEAN_FIELD);
				 </c:when>
				 <c:when test="${'$LongID'}" > 
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.NUMERIC_FIELD);
				 </c:when>
				 <c:when test="${'$FloatID'}" > 
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.DECIMAL_FIELD);
				 </c:when>
				 <c:when test="${'$CurrencyID'}" >  
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.CURRENCY_FIELD);
				 </c:when>				 
		 		</c:choose>
				</c:iterate>
	</c:if>
	<%-- process parent class level 1 attributes--%>
	<c:if test="not($class/@name = $parentClass1/@name)">
				<c:iterate select="$parentClass1/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" > 
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.STRING_FIELD);
				 </c:when>
				 <c:when test="${'$IntegerID'}" > 
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.NUMERIC_FIELD);
				 </c:when>
				 <c:when test="${'$DateID'}" > 
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.DATE_FIELD);
				 </c:when>
				 <c:when test="${'$BooleanID'}" >  
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.BOOLEAN_FIELD);
				 </c:when>
				 <c:when test="${'$LongID'}" > 
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.NUMERIC_FIELD);
				 </c:when>
				 <c:when test="${'$FloatID'}" > 
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.DECIMAL_FIELD);
				 </c:when>
				 <c:when test="${'$CurrencyID'}" >  
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.CURRENCY_FIELD);
				 </c:when>				 
		 		</c:choose>
				</c:iterate>
	</c:if>		
	<%-- process parent class level 0 attributes--%>	
				<c:iterate select="$class/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" > 
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.STRING_FIELD);
				 </c:when>
				 <c:when test="${'$IntegerID'}" > 
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.NUMERIC_FIELD);
				 </c:when>
				 <c:when test="${'$DateID'}" > 
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.DATE_FIELD);
				 </c:when>
				 <c:when test="${'$BooleanID'}" >  
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.BOOLEAN_FIELD);
				 </c:when>
				 <c:when test="${'$LongID'}" > 
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.NUMERIC_FIELD);
				 </c:when>
				 <c:when test="${'$FloatID'}" > 
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.DECIMAL_FIELD);
				 </c:when>
				 <c:when test="${'$CurrencyID'}" >  
				 addAndAssignField(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)}, "${$attribute/@name}","${upper-case($attribute/@name)}", Field.CURRENCY_FIELD);
				 </c:when>				 
		 		</c:choose>
				</c:iterate>					
	}	
	
	@Override
	protected int appTitleBarId() {
		return R.layout.${lower-case($projectName)}_title_bar;
	}

	@Override
	protected int appTitleBArTextViewId() {
		return R.id.${lower-case($projectName)}_title_text;
	}

	@Override
	protected String titleText() {
		return "Update ${$class/@name} Activity";
	}
	
	@Override
	protected void preUpdate() {
		
	}

	@Override
	protected String updateURL() {
		return ${camelCase($projectName)}Welcome.baseURL + "${lower-case($class/@name)}/update";
	}

	@Override
	protected String entityName() {
		return "${lower-case($class/@name)}";
	}
	
}

</java:format>