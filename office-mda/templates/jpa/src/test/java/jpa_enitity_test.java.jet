
<java:format>
<f:bundle basename="templates/resources/messages">
<f:message>copyright</f:message>
package ${$groupID}.entity.${$package/@name};

import static org.junit.Assert.assertEquals;
import info.yalamanchili.security.gwt.YUser;

import javax.inject.Inject;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.transaction.UserTransaction;
import info.yalamanchili.jpa.AbstractEntity;

import org.jboss.arquillian.api.Deployment;
import org.jboss.arquillian.junit.Arquillian;
import org.jboss.shrinkwrap.api.Archive;
import org.jboss.shrinkwrap.api.ShrinkWrap;
import org.jboss.shrinkwrap.api.asset.EmptyAsset;
import org.jboss.shrinkwrap.api.spec.WebArchive;
import org.junit.Test;
import org.junit.runner.RunWith;

<f:message>generated.class.comment</f:message>
@RunWith(Arquillian.class)
public class ${$class/@name}JPATest {
	<f:message>generated.comment</f:message>
	protected static final int ENTITY_SIZE = 3;
	
	<f:message>generated.comment</f:message>
	@PersistenceContext
	EntityManager em;
	
	<f:message>generated.comment</f:message>
	@Inject
	UserTransaction utx;
	
	<f:message>generated.comment</f:message>
	@Deployment
	public static Archive<?> createDeployment() {
		return ShrinkWrap
				.create(WebArchive.class, "test.war")
				.addPackages(true, ${$class/@name}.class.getPackage(),
						AbstractEntity.class.getPackage())
				.addManifestResource("test-persistence.xml", "persistence.xml")
				.addWebResource(EmptyAsset.INSTANCE, "beans.xml");
	}
	
	<f:message>generated.comment</f:message>
	public void clearAllEntities() throws Exception {
		utx.begin();
		em.joinTransaction();
		em.createQuery("delete from ${$class/@name}").executeUpdate();
		utx.commit();
	}
	
	<f:message>generated.comment</f:message>
	public void insertTestData() throws Exception {
		utx.begin();
		em.joinTransaction();
		for (int i = 0; i < ENTITY_SIZE; i++) {
			${$class/@name} entity = new ${$class/@name}();
			//TODO populate entities
			em.persist(entity);
		}
		utx.commit();
	}	
	
	<f:message>generated.comment</f:message>
	@Test
	public void testInsert() throws Exception {
		clearAllEntities();
		insertTestData();
		utx.begin();
		em.joinTransaction();
		Query query = em.createQuery("from ${$class/@name}");
		assertEquals(query.getResultList().size(), ENTITY_SIZE);
		utx.commit();
	}
	
}
</f:bundle>
</java:format>
