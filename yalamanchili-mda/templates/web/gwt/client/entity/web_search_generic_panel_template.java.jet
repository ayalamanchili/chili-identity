<java:merge/>
<java:format>
<f:bundle basename="templates/resources/messages">
<f:message>copyright</f:message>
package ${$packageName}.${lower-case($class/@name)};

import ${$groupID}.entity.${lower-case($package/@name)}.${$class/@name};
import ${$webPackage}${camelCase($projectName)}Welcome;
import info.yalamanchili.gwt.composite.ReadAllCompositey.ReadAllTableType;
import info.yalamanchili.gwt.callback.ALAsyncCallback;
import info.yalamanchili.gwt.composite.SearchPanelCompositeGeneric;
import com.google.gwt.user.client.ui.DockPanel;
import java.util.List;
import info.yalamanchili.gwt.fields.DataType;
import info.yalamanchili.gwt.widgets.ALSuggestBox;

<f:message>generated.class.comment</f:message>
public class ${$class/@name}SearchPanelGeneric extends
		SearchPanelCompositeGeneric<${$class/@name}> {
<f:message>generated.comment</f:message>		
	private static ${$class/@name}SearchPanelGeneric instance;
<f:message>generated.comment</f:message>
	public static ${$class/@name}SearchPanelGeneric instance() {
		return instance;
	}
<f:message>generated.comment</f:message>
	public ${$class/@name}SearchPanelGeneric() {
		instance = this;
		initSearchPanelCompositeGeneric("${$class/@name}",
				${camelCase($projectName)}Welcome.constants);
	}
<f:message>generated.comment</f:message>
	@Override
	protected void addListeners() {
		// TODO Auto-generated method stub

	}
<f:message>generated.comment</f:message>
	@Override
	protected void addWidgetsBeforeCaptionPanel() {
		// TODO Auto-generated method stub

	}
<f:message>generated.comment</f:message>
	@Override
	protected void addWidgets() {
	<%-- process parent class level 2 attributes--%>
	<c:if test="not($class/@name = $parentClass2/@name)">
				<c:iterate select="$parentClass2/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.STRING_FIELD); 
				 </c:when>
				 <c:when test="${'$IntegerID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.INTEGER_FIELD); 
				 </c:when>
				 <c:when test="${'$DateID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.DATE_FIELD);  
				 </c:when>
				 <c:when test="${'$BooleanID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.BOOLEAN_FIELD); 
				 </c:when>
				 <c:when test="${'$LongID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.LONG_FIELD); 
				 </c:when>
				 <c:when test="${'$FloatID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.FLOAT_FIELD); 
				 </c:when>
				 <c:when test="${'$CurrencyID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.CURRENCY_FIELD); 
				 </c:when>				 
					 <c:otherwise>
		 			</c:otherwise>
		 		</c:choose>
			</c:iterate>
	</c:if>
	<%-- process parent class level 1 attributes--%>
	<c:if test="not($class/@name = $parentClass1/@name)">
			<c:iterate select="$parentClass1/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.STRING_FIELD); 
				 </c:when>
				 <c:when test="${'$IntegerID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.INTEGER_FIELD); 
				 </c:when>
				 <c:when test="${'$DateID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.DATE_FIELD);  
				 </c:when>
				 <c:when test="${'$BooleanID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.BOOLEAN_FIELD); 
				 </c:when>
				 <c:when test="${'$LongID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.LONG_FIELD); 
				 </c:when>
				 <c:when test="${'$FloatID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.FLOAT_FIELD); 
				 </c:when>
				 <c:when test="${'$CurrencyID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.CURRENCY_FIELD); 
				 </c:when>				 
					 <c:otherwise>
		 			</c:otherwise>
		 		</c:choose>
			</c:iterate>
	</c:if>
	<%-- process base class attributes--%>
			<c:iterate select="$class/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.STRING_FIELD); 
				 </c:when>
				 <c:when test="${'$IntegerID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.INTEGER_FIELD); 
				 </c:when>
				 <c:when test="${'$DateID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.DATE_FIELD);  
				 </c:when>
				 <c:when test="${'$BooleanID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.BOOLEAN_FIELD); 
				 </c:when>
				 <c:when test="${'$LongID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.LONG_FIELD); 
				 </c:when>
				 <c:when test="${'$FloatID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.FLOAT_FIELD); 
				 </c:when>
				 <c:when test="${'$CurrencyID'}" > addField("${$attribute/@name}", false, ${$attribute/@isRequired}, DataType.CURRENCY_FIELD); 
				 </c:when>				 
					 <c:otherwise>
		 			</c:otherwise>
		 		</c:choose>
			</c:iterate>
			
			<%-- process parent class level 2 attributes--%>
			<c:if test="not($class/@name = $parentClass2/@name)">
			<c:iterate select="$parentClass2/Classifier.feature/Attribute" var="attribute">
				<c:if test="$attribute/StructuralFeature.type/DataType/@href = $StringID">
				${$packageName}.${lower-case($class/@name)}.${$class/@name}Service.${$class/@name}ServiceAsync.instance().getSuggestionsForName("${$attribute/@name}",
					new ${$class/@name}(), new ALAsyncCallback<List<String>>() {

					@Override
					public void onResponse(List<String> values) {
						addSuggestBox("${$attribute/@name}", values);

					}

					});
				</c:if>
			</c:iterate>
			</c:if>
			<%-- process parent class level 1 attributes--%>
			<c:if test="not($class/@name = $parentClass1/@name)">
			<c:iterate select="$parentClass1/Classifier.feature/Attribute" var="attribute">
				<c:if test="$attribute/StructuralFeature.type/DataType/@href = $StringID">
				${$packageName}.${lower-case($class/@name)}.${$class/@name}Service.${$class/@name}ServiceAsync.instance().getSuggestionsForName("${$attribute/@name}",
					new ${$class/@name}(), new ALAsyncCallback<List<String>>() {

					@Override
					public void onResponse(List<String> values) {
						addSuggestBox("${$attribute/@name}", values);

					}

					});
				</c:if>
			</c:iterate>
			</c:if>
			<c:iterate select="$class/Classifier.feature/Attribute" var="attribute">
				<c:if test="$attribute/StructuralFeature.type/DataType/@href = $StringID">
				${$packageName}.${lower-case($class/@name)}.${$class/@name}Service.${$class/@name}ServiceAsync.instance().getSuggestionsForName("${$attribute/@name}",
					new ${$class/@name}(), new ALAsyncCallback<List<String>>() {

					@Override
					public void onResponse(List<String> values) {
						addSuggestBox("${$attribute/@name}", values);

					}

					});
				</c:if>
			</c:iterate>
	}
<f:message>generated.comment</f:message>
	@Override
	protected void configure() {

	}
<f:message>generated.comment</f:message>
	@Override
	protected void searchButtonClicked() {
		${camelCase($projectName)}Welcome.instance().getEntityPanel().clear();
		${camelCase($projectName)}Welcome.instance().getEntityPanel().add(
				(new ReadAll${$class/@name}sPanely(ReadAllTableType.READALL_SEARCH)));

	}
<f:message>generated.comment</f:message>
	@Override
	protected ${$class/@name} populateEntity() {
		${$class/@name} ${lower-case($class/@name)} = new ${$class/@name}();
			<%-- process parent class level 2 attributes--%>
	<c:if test="not($class/@name = $parentClass2/@name)">
		<c:iterate select="$parentClass2/Classifier.feature/Attribute" var="attribute">
			<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
			 <c:when test="${'$StringID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(((ALSuggestBox) fields.get("${$attribute/@name}")).getText()); 
			 </c:when>
			 <c:when test="${'$IntegerID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getIntegerField("${$attribute/@name}")); 
			 </c:when>
			 <c:when test="${'$DateID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getDateField("${$attribute/@name}")); 
			 </c:when>
			 <c:when test="${'$BooleanID'}" >${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getBooleanField("${$attribute/@name}")); 
			 </c:when>
			 <c:when test="${'$LongID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getLongField("${$attribute/@name}")); 
			 </c:when>
			 <c:when test="${'$FloatID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getFloatField("${$attribute/@name}")); 
			 </c:when>
			 <c:when test="${'$CurrencyID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getCurrencyField("${$attribute/@name}")); 
			 </c:when>			 
				 <c:otherwise>
	 			</c:otherwise>
	 		</c:choose>
		</c:iterate>
	</c:if>
	<%-- process parent class level 1 attributes--%>
	<c:if test="not($class/@name = $parentClass1/@name)">
		<c:iterate select="$parentClass1/Classifier.feature/Attribute" var="attribute">
			<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
			 <c:when test="${'$StringID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(((ALSuggestBox) fields.get("${$attribute/@name}")).getText()); 
			 </c:when>
			 <c:when test="${'$IntegerID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getIntegerField("${$attribute/@name}")); 
			 </c:when>
			 <c:when test="${'$DateID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getDateField("${$attribute/@name}")); 
			 </c:when>
			 <c:when test="${'$BooleanID'}" >${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getBooleanField("${$attribute/@name}")); 
			 </c:when>
			 <c:when test="${'$LongID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getLongField("${$attribute/@name}")); 
			 </c:when>
			 <c:when test="${'$FloatID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getFloatField("${$attribute/@name}")); 
			 </c:when>
			 <c:when test="${'$CurrencyID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getCurrencyField("${$attribute/@name}")); 
			 </c:when>				 
				 <c:otherwise>
	 			</c:otherwise>
	 		</c:choose>
		</c:iterate>
	</c:if>
		<c:iterate select="$class/Classifier.feature/Attribute" var="attribute">
			<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
			 <c:when test="${'$StringID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(((ALSuggestBox) fields.get("${$attribute/@name}")).getText()); 
			 </c:when>
			 <c:when test="${'$IntegerID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getIntegerField("${$attribute/@name}")); 
			 </c:when>
			 <c:when test="${'$DateID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getDateField("${$attribute/@name}")); 
			 </c:when>
			 <c:when test="${'$BooleanID'}" >${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getBooleanField("${$attribute/@name}")); 
			 </c:when>
			 <c:when test="${'$LongID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getLongField("${$attribute/@name}")); 
			 </c:when>
			 <c:when test="${'$FloatID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getFloatField("${$attribute/@name}")); 
			 </c:when>
			 <c:when test="${'$CurrencyID'}" > ${lower-case($class/@name)}.set${ uppercaseFirst($attribute/@name)}(getCurrencyField("${$attribute/@name}")); 
			 </c:when>				 
				 <c:otherwise>
	 			</c:otherwise>
	 		</c:choose>
		</c:iterate>
		return ${lower-case($class/@name)};
	}
<f:message>generated.comment</f:message>	
	protected void postValidate() {

	}
}
</f:bundle>
</java:format>