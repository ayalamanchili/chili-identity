<java:format>
package ${$groupID}.android.${$package/@name}.${lower-case($class/@name)};
import ${$groupID}.android.${camelCase($projectName)}Main;
import ${$groupID}.android.R;
import ${$groupID}.entity.${lower-case($package/@name)}.${$class/@name};
import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.Button;
import android.widget.TextView;
import info.yalamanchili.android.views.EditTextField;
import java.util.Date;
import android.widget.DatePicker;
import android.app.DatePickerDialog;

public class Update${$class/@name} extends Activity implements OnClickListener {
	protected ${$class/@name} ${lower-case($class/@name)};
	protected Button update;
	<%-- fields--%>
	<%-- process parent class level 2 attributes--%>
	<c:if test="not($class/@name = $parentClass2/@name)">
				<c:iterate select="$parentClass2/Classifier.feature/Attribute" var="attribute">			
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" > EditTextField ${$attribute/@name}TF;
				 </c:when>
				 <c:when test="${'$IntegerID'}" > EditTextField ${$attribute/@name}YF;
				 </c:when>
				 <c:when test="${'$DateID'}" > 
					Date ${$attribute/@name}= new Date();
				 	Button ${$attribute/@name}B;
												static final int ${upper-case($attribute/@name)}_ID = <f:unique/>;
												private DatePickerDialog.OnDateSetListener ${$attribute/@name}DateSetListener = new DatePickerDialog.OnDateSetListener() {
												
													public void onDateSet(DatePicker view, int year, int monthOfYear,
															int dayOfMonth) {
													${$attribute/@name}.setDate(dayOfMonth);
													${$attribute/@name}.setMonth(monthOfYear + 1);
													${$attribute/@name}.setYear(year);
													}
													};
				 </c:when>
				 <c:when test="${'$BooleanID'}" > 
				 </c:when>
				 <c:when test="${'$LongID'}" > EditTextField ${$attribute/@name}TF;
				 </c:when>
				 <c:when test="${'$FloatID'}" > EditTextField ${$attribute/@name}TF;
				 </c:when>
		 		</c:choose>
				</c:iterate>
	</c:if>
	<%-- process parent class level 1 attributes--%>
	<c:if test="not($class/@name = $parentClass1/@name)">
				<c:iterate select="$parentClass1/Classifier.feature/Attribute" var="attribute">
								<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" > EditTextField ${$attribute/@name}TF;
				 </c:when>
				 <c:when test="${'$IntegerID'}" > EditTextField ${$attribute/@name}TF;
				 </c:when>
				 <c:when test="${'$DateID'}" >
					Date ${$attribute/@name}= new Date();				 
				  	Button ${$attribute/@name}B;
												static final int ${upper-case($attribute/@name)}_ID =  <f:unique/>;
												private DatePickerDialog.OnDateSetListener ${$attribute/@name}DateSetListener = new DatePickerDialog.OnDateSetListener() {
												
													public void onDateSet(DatePicker view, int year, int monthOfYear,
															int dayOfMonth) {
													${$attribute/@name}.setDate(dayOfMonth);
													${$attribute/@name}.setMonth(monthOfYear + 1);
													${$attribute/@name}.setYear(year);
													}
													};
				 </c:when>
				 <c:when test="${'$BooleanID'}" > 
				 </c:when>
				 <c:when test="${'$LongID'}" > EditTextField ${$attribute/@name}TF;
				 </c:when>
				 <c:when test="${'$FloatID'}" > EditTextField ${$attribute/@name}TF;
				 </c:when>
		 		</c:choose>
				</c:iterate>
	</c:if>		
	<%-- process parent class level 0 attributes--%>	
			<c:iterate select="$class/Classifier.feature/Attribute" var="attribute">
							<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" > EditTextField ${$attribute/@name}TF;
				 </c:when>
				 <c:when test="${'$IntegerID'}" > EditTextField ${$attribute/@name}TF;
				 </c:when>
				 <c:when test="${'$DateID'}" >
				 Date ${$attribute/@name}= new Date(); 	
				 Button ${$attribute/@name}B;
												static final int ${upper-case($attribute/@name)}_ID =  <f:unique/>;
												private DatePickerDialog.OnDateSetListener ${$attribute/@name}DateSetListener = new DatePickerDialog.OnDateSetListener() {
												
													public void onDateSet(DatePicker view, int year, int monthOfYear,
															int dayOfMonth) {
													${$attribute/@name}.setDate(dayOfMonth);
													${$attribute/@name}.setMonth(monthOfYear + 1);
													${$attribute/@name}.setYear(year);
													}
													};
				 </c:when>
				 <c:when test="${'$BooleanID'}" > 
				 </c:when>
				 <c:when test="${'$LongID'}" > EditTextField ${$attribute/@name}TF;
				 </c:when>
				 <c:when test="${'$FloatID'}" > EditTextField ${$attribute/@name}TF;
				 </c:when>
		 		</c:choose>

			</c:iterate>	
			
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_CUSTOM_TITLE);
		setContentView(R.layout.${lower-case($class/@name)}_create);
		customizeTitle();
		update = (Button) findViewById(R.id.${lower-case($class/@name)}_create);
		update.setOnClickListener(this);
		assignFields();
	}

	public void customizeTitle() {
		getWindow().setFeatureInt(Window.FEATURE_CUSTOM_TITLE,
				R.layout.automanage_title_bar);
		TextView mytitletext = (TextView) findViewById(R.id.automanage_title_text);
		mytitletext.setText("Update ${$class/@name} Activity");
	}

	public void onClick(View arg0) {
		Log.d("info.yalamanchili.project", "update ${$class/@name} clicked");

	}
	
	public void assignFields() {
	<%-- process parent class level 2 attributes--%>
	<c:if test="not($class/@name = $parentClass2/@name)">
				<c:iterate select="$parentClass2/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" >  ${$attribute/@name}TF = (EditTextField) findViewById(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)});
				 ${$attribute/@name}TF.setLabel("${upper-case($attribute/@name)}");
				 </c:when>
				 <c:when test="${'$IntegerID'}" >  ${$attribute/@name}TF = (EditTextField) findViewById(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)});
				 ${$attribute/@name}TF.setLabel("${upper-case($attribute/@name)}");
				 </c:when>
				 <c:when test="${'$DateID'}" >  ${$attribute/@name}B= (Button) findViewById(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)});
				 ${$attribute/@name}B.setOnClickListener(this);
				 </c:when>
				 <c:when test="${'$BooleanID'}" > 
				 </c:when>
				 <c:when test="${'$LongID'}" > ${$attribute/@name}TF = (EditTextField) findViewById(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)});
				 ${$attribute/@name}TF.setLabel("${upper-case($attribute/@name)}");
				 </c:when>
				 <c:when test="${'$FloatID'}" >  ${$attribute/@name}TF = (EditTextField) findViewById(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)});
				 ${$attribute/@name}TF.setLabel("${upper-case($attribute/@name)}");
				 </c:when>
		 		</c:choose>
				</c:iterate>
	</c:if>
	<%-- process parent class level 1 attributes--%>
	<c:if test="not($class/@name = $parentClass1/@name)">
				<c:iterate select="$parentClass1/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" >  ${$attribute/@name}TF = (EditTextField) findViewById(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)});
				 ${$attribute/@name}TF.setLabel("${upper-case($attribute/@name)}");
				 </c:when>
				 <c:when test="${'$IntegerID'}" >  ${$attribute/@name}TF = (EditTextField) findViewById(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)});
				 ${$attribute/@name}TF.setLabel("${upper-case($attribute/@name)}");
				 </c:when>
				 <c:when test="${'$DateID'}" >  ${$attribute/@name}B= (Button) findViewById(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)});
				 ${$attribute/@name}B.setOnClickListener(this);
				 </c:when>
				 <c:when test="${'$BooleanID'}" > 
				 </c:when>
				 <c:when test="${'$LongID'}" > ${$attribute/@name}TF = (EditTextField) findViewById(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)});
				 ${$attribute/@name}TF.setLabel("${upper-case($attribute/@name)}");
				 </c:when>
				 <c:when test="${'$FloatID'}" >  ${$attribute/@name}TF = (EditTextField) findViewById(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)});
				 ${$attribute/@name}TF.setLabel("${upper-case($attribute/@name)}");
				 </c:when>
		 		</c:choose>
				</c:iterate>
	</c:if>		
	<%-- process parent class level 0 attributes--%>	
				<c:iterate select="$class/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" >  ${$attribute/@name}TF = (EditTextField) findViewById(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)});
				 ${$attribute/@name}TF.setLabel("${upper-case($attribute/@name)}");
				 </c:when>
				 <c:when test="${'$IntegerID'}" >  ${$attribute/@name}TF = (EditTextField) findViewById(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)});
				 ${$attribute/@name}TF.setLabel("${upper-case($attribute/@name)}");
				 </c:when>
				 <c:when test="${'$DateID'}" >  ${$attribute/@name}B= (Button) findViewById(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)});
				 ${$attribute/@name}B.setOnClickListener(this);
				 </c:when>
				 <c:when test="${'$BooleanID'}" > 
				 </c:when>
				 <c:when test="${'$LongID'}" > ${$attribute/@name}TF = (EditTextField) findViewById(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)});
				 ${$attribute/@name}TF.setLabel("${upper-case($attribute/@name)}");
				 </c:when>
				 <c:when test="${'$FloatID'}" >  ${$attribute/@name}TF = (EditTextField) findViewById(R.id.${lower-case($class/@name)}_create_${lower-case($attribute/@name)});
				 ${$attribute/@name}TF.setLabel("${upper-case($attribute/@name)}");
				 </c:when>
		 		</c:choose>
				</c:iterate>	
	}
	protected void populateFields(){
	${lower-case($class/@name)} = (${$class/@name}) getIntent().getSerializableExtra("entity");
	<%-- process parent class level 2 attributes--%>
	<c:if test="not($class/@name = $parentClass2/@name)">
				<c:iterate select="$parentClass2/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" >
				 if (${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}() != null)
					${$attribute/@name}TF.setValue(${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}().toString());
				 </c:when>
				 <c:when test="${'$IntegerID'}" > 
				 if (${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}() != null)
					${$attribute/@name}TF.setValue(${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}().toString());				 
				 </c:when>
				 <c:when test="${'$DateID'}" > 
				 </c:when>
				 <c:when test="${'$BooleanID'}" > 
				 </c:when>
				 <c:when test="${'$LongID'}" >
				 if (${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}() != null)
					${$attribute/@name}TF.setValue(${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}().toString());				  
				 </c:when>
				 <c:when test="${'$FloatID'}" >
				 if (${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}() != null)
					${$attribute/@name}TF.setValue(${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}().toString());
				 </c:when>
		 		</c:choose>
				</c:iterate>
	</c:if>
	<%-- process parent class level 1 attributes--%>
	<c:if test="not($class/@name = $parentClass1/@name)">
				<c:iterate select="$parentClass1/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" >
				 if (${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}() != null)
					${$attribute/@name}TF.setValue(${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}().toString());
				 </c:when>
				 <c:when test="${'$IntegerID'}" > 
				 if (${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}() != null)
					${$attribute/@name}TF.setValue(${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}().toString());				 
				 </c:when>
				 <c:when test="${'$DateID'}" > 
				 </c:when>
				 <c:when test="${'$BooleanID'}" > 
				 </c:when>
				 <c:when test="${'$LongID'}" >
				 if (${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}() != null)
					${$attribute/@name}TF.setValue(${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}().toString());				  
				 </c:when>
				 <c:when test="${'$FloatID'}" >
				 if (${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}() != null)
					${$attribute/@name}TF.setValue(${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}().toString());
				 </c:when>
		 		</c:choose>
				</c:iterate>
	</c:if>		
	<%-- process parent class level 0 attributes--%>	
				<c:iterate select="$class/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" >
				 if (${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}() != null)
					${$attribute/@name}TF.setValue(${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}().toString());
				 </c:when>
				 <c:when test="${'$IntegerID'}" > 
				 if (${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}() != null)
					${$attribute/@name}TF.setValue(${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}().toString());				 
				 </c:when>
				 <c:when test="${'$DateID'}" > 
				 </c:when>
				 <c:when test="${'$BooleanID'}" > 
				 </c:when>
				 <c:when test="${'$LongID'}" >
				 if (${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}() != null)
					${$attribute/@name}TF.setValue(${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}().toString());				  
				 </c:when>
				 <c:when test="${'$FloatID'}" >
				 if (${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}() != null)
					${$attribute/@name}TF.setValue(${lower-case($class/@name)}.get${uppercaseFirst($attribute/@name)}().toString());
				 </c:when>
		 		</c:choose>
			</c:iterate>	
	}

	@Override
	public void onStart() {
		super.onStart();
		Log.d("info.yalamacnhili.android", "in ${$class/@name} start");
		populateFields();
	}
}
</java:format>