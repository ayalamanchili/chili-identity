<java:format>
package ${$groupID}.rest;
import info.yalamanchili.mapper.BeanMapper;
import info.yalamanchili.security.gwt.YUser;
import info.yalamanchili.security.gwt.YRole;

import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;

import org.jboss.seam.ScopeType;
import org.jboss.seam.annotations.In;
import org.jboss.seam.annotations.Name;
import org.jboss.seam.annotations.Scope;
import org.jboss.seam.annotations.Transactional;
import org.jboss.seam.security.Identity;
import org.jboss.seam.security.management.IdentityManager;
import org.jboss.seam.security.Credentials;

import com.thoughtworks.xstream.XStream;

@Name("${camelCase($projectName)}RestResource")
@Path("/manage")
@Scope(ScopeType.STATELESS)
@Transactional
public class ${camelCase($projectName)}Resource {

	protected XStream xstream = new XStream();
	protected BeanMapper mapper = new BeanMapper();

	@In(create = true)
	protected Identity identity;

	@In(create = true)
	protected IdentityManager identityManager;
	
	@In
	protected Credentials credentials;

	@In(create = true)
	protected EntityManager yem;

	@GET
	@Path("/login/{username}/{password}")
	@Produces("application/xml")
	public String login(@PathParam("username") String username,
			@PathParam("password") String password) {
		identity.getCredentials().setUsername(username);
		identity.getCredentials().setPassword(password);
		if (("loggedIn").equals(identity.login())) {
			System.out.println("in login id");
			Query getUserQuery = yem.createQuery("from YUser where username='"
					+ username + "'");
			YUser user = (YUser) getUserQuery.getSingleResult();
			return xstream.toXML(user.toString());
		} else {
			return xstream.toXML(null);
		}
	}
	
	public Boolean authenticate() {
		System.out.println("in authenticate");
		String username = credentials.getUsername();
		String password = credentials.getPassword();
		identity.getCredentials().setUsername(username);
		identity.getCredentials().setPassword(password);
		if (("loggedIn").equals(identity.login())) {
			System.out.println("in authenticate success");
			return true;
		} else {
			return false;
		}
	}

	@GET
	@Path("/createuser/{username}/{password}")
	@Produces("application/xml")
	public void createUser(@PathParam("username") String username,
			@PathParam("password") String password) {
		Identity.setSecurityEnabled(false);
		identityManager.createUser(username, password);
		identityManager.grantRole(username, "user");
		Identity.setSecurityEnabled(true);
	}

	@GET
	@Path("/logout")
	@Produces("application/xml")
	public String logout() {
		identity.logout();
		return xstream.toXML("loggedout");

	}
}	
</java:format>