<java:format>
package ${$groupID}.test.${$package/@name};

import static org.junit.Assert.assertTrue;
import ${$groupID}.entity.${lower-case($package/@name)}.${$class/@name};
import java.util.Properties;
import java.util.List;
import info.yalamanchili.commons.PropertyFileLoader;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.Ignore;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverBackedSelenium;
import org.openqa.selenium.firefox.FirefoxDriver;
import com.thoughtworks.selenium.Selenium;
import org.openqa.selenium.WebElement;
import info.yalamanchili.qa.WebDriverTest;

public class ${$class/@name}Test extends WebDriverTest<${$class/@name}>{
	protected static ${$class/@name} entity= new ${$class/@name}();
	protected static Long numberOfRecords;
	
	@Test
	public void testReadAllWidgetRender() {
		driver.findElement(By.xpath("//td[contains(text(), '${upper-case($package/@name)}')]"))
				.click();
		driver.findElement(By.xpath("//td[contains(text(), '${$class/@name}')]")).click();
		waitforAjaxResponce();
		assertTrue(driver.getPageSource().contains("Total Results"));
		assertTrue(driver.getPageSource().contains("Action"));
		WebElement totalResultsE = driver.findElement(By
				.xpath("//div[contains(text(), 'Total Results')]"));
		String totalResultsString = totalResultsE.getText();
		numberOfRecords = new Long(totalResultsString.substring(totalResultsE
				.getText().indexOf(":") + 1));
	}
	
	@Test
	public void testCreateWidget() {
		driver.findElement(By.xpath("//td[contains(text(), '${upper-case($package/@name)}')]"))
				.click();
		driver.findElement(By.xpath("//td[contains(text(), '${$class/@name}')]")).click();
		waitforAjaxResponce();
		driver.findElement(By.xpath("//div[contains(text(), 'Create ${$class/@name}')]"))
				.click();
	<%-- type in test data in the fields --%>	
	<%-- process parent class level 2 attributes--%>
	<c:if test="not($class/@name = $parentClass2/@name)">
				<c:iterate select="$parentClass2/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" > 
				 driver.findElement(By.xpath("//input[@title='${$attribute/@name}']")).sendKeys(
				"test WD ${$attribute/@name}");
				entity.set${uppercaseFirst($attribute/@name)}("test WD ${$attribute/@name}");
				 </c:when>
				 <c:when test="${'$IntegerID'}" >
				
				 </c:when>
				 <c:when test="${'$DateID'}" >  
				
				 </c:when>
				 <c:when test="${'$BooleanID'}" > 
				 </c:when>
				 <c:when test="${'$LongID'}" > 
				
				 </c:when>
				 <c:when test="${'$FloatID'}" >
				
				 </c:when>
		 		</c:choose>
				</c:iterate>
	</c:if>
	<%-- process parent class level 1 attributes--%>
	<c:if test="not($class/@name = $parentClass1/@name)">
				<c:iterate select="$parentClass1/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" > 
				driver.findElement(By.xpath("//input[@title='${$attribute/@name}']")).sendKeys(
				"test WD ${$attribute/@name}");
				entity.set${uppercaseFirst($attribute/@name)}("test WD ${$attribute/@name}");
				 </c:when>
				 <c:when test="${'$IntegerID'}" >
				 
				 </c:when>
				 <c:when test="${'$DateID'}" >
				 
				 </c:when>
				 <c:when test="${'$BooleanID'}" > 
				 </c:when>
				 <c:when test="${'$LongID'}" >
			
				 </c:when>
				 <c:when test="${'$FloatID'}" >
			
				 </c:when>
		 		</c:choose>
				</c:iterate>
	</c:if>		
	<%-- process parent class level 0 attributes--%>	
				<c:iterate select="$class/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" > 
				 driver.findElement(By.xpath("//input[@title='${$attribute/@name}']")).sendKeys(
				"test WD ${$attribute/@name}");
				entity.set${uppercaseFirst($attribute/@name)}("test WD ${$attribute/@name}");
				 </c:when>
				 <c:when test="${'$IntegerID'}" > 
				
				 </c:when>
				 <c:when test="${'$DateID'}" > 
				
				 </c:when>
				 <c:when test="${'$BooleanID'}" > 
				 </c:when>
				 <c:when test="${'$LongID'}" > 
				 
				 </c:when>
				 <c:when test="${'$FloatID'}" > 
				
				 </c:when>
		 		</c:choose>
				</c:iterate>					
		driver.findElement(By.xpath("//button[contains(text(), 'create')]"))
				.click();
		waitforAjaxResponce();
		assertTrue(driver.getPageSource().contains("created"));
	}
	
	@Test
	public void testReadAllWidget() {
		boolean flag = false;
		driver.findElement(By.xpath("//td[contains(text(), '${upper-case($package/@name)}')]"))
				.click();
		driver.findElement(By.xpath("//td[contains(text(), '${$class/@name}')]")).click();
		waitforAjaxResponce();
		assertTrue(driver.getPageSource().contains("Total Results"));
		assertTrue(driver.getPageSource().contains("Action"));
		WebElement totalResultsE = driver.findElement(By
				.xpath("//div[contains(text(), 'Total Results')]"));
		String totalResultsString = totalResultsE.getText();
		Long results = new Long(totalResultsString.substring(totalResultsE
				.getText().indexOf(":") + 1));
		assertTrue(results == numberOfRecords + 1);
		List<WebElement> elements = driver.findElements(By.xpath("//option"));
		for (WebElement page : elements) {
			page.setSelected();
			waitforAjaxResponce();
				<%-- process parent class level 2 attributes--%>
	<c:if test="not($class/@name = $parentClass2/@name)">
				<c:iterate select="$parentClass2/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" > 
					if (driver.getPageSource().contains(entity.get${uppercaseFirst($attribute/@name)}())) {
						flag = true;
						break;
					}
				 </c:when>
				 <c:when test="${'$IntegerID'}" >
				
				 </c:when>
				 <c:when test="${'$DateID'}" >  
				
				 </c:when>
				 <c:when test="${'$BooleanID'}" > 
				 </c:when>
				 <c:when test="${'$LongID'}" > 
				
				 </c:when>
				 <c:when test="${'$FloatID'}" >
				
				 </c:when>
		 		</c:choose>
				</c:iterate>
	</c:if>
	<%-- process parent class level 1 attributes--%>
	<c:if test="not($class/@name = $parentClass1/@name)">
				<c:iterate select="$parentClass1/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" > 
					if (driver.getPageSource().contains(entity.get${uppercaseFirst($attribute/@name)}())) {
						flag = true;
						break;
					}
				 </c:when>
				 <c:when test="${'$IntegerID'}" >
				 
				 </c:when>
				 <c:when test="${'$DateID'}" >
				 
				 </c:when>
				 <c:when test="${'$BooleanID'}" > 
				 </c:when>
				 <c:when test="${'$LongID'}" >
			
				 </c:when>
				 <c:when test="${'$FloatID'}" >
			
				 </c:when>
		 		</c:choose>
				</c:iterate>
	</c:if>		
	<%-- process parent class level 0 attributes--%>	
				<c:iterate select="$class/Classifier.feature/Attribute" var="attribute">
				<c:choose select="$attribute/StructuralFeature.type/DataType/@href" >
				 <c:when test="${'$StringID'}" > 
					if (driver.getPageSource().contains(entity.get${uppercaseFirst($attribute/@name)}())) {
						flag = true;
						break;
					}
				 </c:when>
				 <c:when test="${'$IntegerID'}" > 
				
				 </c:when>
				 <c:when test="${'$DateID'}" > 
				
				 </c:when>
				 <c:when test="${'$BooleanID'}" > 
				 </c:when>
				 <c:when test="${'$LongID'}" > 
				 
				 </c:when>
				 <c:when test="${'$FloatID'}" > 
				
				 </c:when>
		 		</c:choose>
				</c:iterate>	
		}
		assertTrue(flag);
	}
	
}
</java:format>